package net.loveruby.cflat.ast;

public interface ASTVisitor {
    public void visit(BlockNode node);
    public void visit(IfNode node);
    public void visit(CondExprNode node);
    public void visit(SwitchNode node);
    public void visit(CaseNode node);
    public void visit(WhileNode node);
    public void visit(DoWhileNode node);
    public void visit(ForNode node);
    public void visit(BreakNode node);
    public void visit(ContinueNode node);
    public void visit(GotoNode node);
    public void visit(LabelNode node);
    public void visit(ReturnNode node);
    public void visit(AssignNode node);
    public void visit(PlusAssignNode node);
    public void visit(MinusAssignNode node);
    public void visit(MulAssignNode node);
    public void visit(DivAssignNode node);
    public void visit(ModAssignNode node);
    public void visit(AndAssignNode node);
    public void visit(OrAssignNode node);
    public void visit(XorAssignNode node);
    public void visit(LShiftAssignNode node);
    public void visit(RShiftAssignNode node);
    public void visit(LogicalOrNode node);
    public void visit(LogicalAndNode node);
    public void visit(GtNode node);
    public void visit(LtNode node);
    public void visit(GtEqNode node);
    public void visit(LtEqNode node);
    public void visit(EqNode node);
    public void visit(NotEqNode node);
    public void visit(BitwiseOrNode node);
    public void visit(BitwiseXorNode node);
    public void visit(BitwiseAndNode node);
    public void visit(RShiftNode node);
    public void visit(LShiftNode node);
    public void visit(PlusNode node);
    public void visit(MinusNode node);
    public void visit(MulNode node);
    public void visit(DivNode node);
    public void visit(ModNode node);
    public void visit(SuffixIncNode node);
    public void visit(SuffixDecNode node);
    public void visit(ArefNode node);
    public void visit(MemberNode node);
    public void visit(PtrMemberNode node);
    public void visit(IntegerLiteralNode node);
    public void visit(CharacterLiteralNode node);
    public void visit(StringLiteralNode node);
    public void visit(FuncallNode node);
    public void visit(VariableNode node);
    public void visit(UnaryPlusNode node);
    public void visit(UnaryMinusNode node);
    public void visit(LogicalNotNode node);
    public void visit(BitwiseNotNode node);
    public void visit(DereferenceNode node);
    public void visit(AddressNode node);
    public void visit(PrefixIncNode node);
    public void visit(PrefixDecNode node);
    public void visit(CastNode node);
}
